{"version":3,"sources":["parseStyleName.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,IAAM,iBAAiB,EAAjB;;kBAES,UAAC,sBAAD,EAAiC,aAAjC,EAA2E;AACtF,QAAI,mBAAJ,CADsF;;AAGtF,QAAI,eAAe,sBAAf,CAAJ,EAA4C;AACxC,qBAAa,eAAe,sBAAf,CAAb,CADwC;KAA5C,MAEO;AACH,qBAAa,oBAAO,sBAAP,EAA+B,KAA/B,CAAqC,GAArC,CAAb,CADG;AAEH,qBAAa,sBAAS,UAAT,CAAb,CAFG;;AAIH,uBAAe,sBAAf,IAAyC,UAAzC,CAJG;KAFP;;AASA,QAAI,kBAAkB,KAAlB,IAA2B,WAAW,MAAX,GAAoB,CAApB,EAAuB;AAClD,cAAM,IAAI,KAAJ,CAAU,qEAAqE,sBAArE,GAA8F,KAA9F,CAAhB,CADkD;KAAtD;;AAIA,WAAO,UAAP,CAhBsF;CAA3E","file":"parseStyleName.js","sourcesContent":["import _ from 'lodash';\n\nconst styleNameIndex = {};\n\nexport default (styleNamePropertyValue: string, allowMultiple: boolean): Array<string> => {\n    let styleNames;\n\n    if (styleNameIndex[styleNamePropertyValue]) {\n        styleNames = styleNameIndex[styleNamePropertyValue];\n    } else {\n        styleNames = _.trim(styleNamePropertyValue).split(' ');\n        styleNames = _.filter(styleNames);\n\n        styleNameIndex[styleNamePropertyValue] = styleNames;\n    }\n\n    if (allowMultiple === false && styleNames.length > 1) {\n        throw new Error('ReactElement styleName property defines multiple module names (\"' + styleNamePropertyValue + '\").');\n    }\n\n    return styleNames;\n};\n"],"sourceRoot":"/source/"}