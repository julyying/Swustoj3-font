{"version":3,"sources":["objectUnfreeze.js"],"names":[],"mappings":";;;;;;;;;;;;kBAGe,UAAC,MAAD,EAA4B;AACvC,QAAI,eAAJ,CADuC;;AAGvC,QAAI,OAAO,WAAP,KAAuB,KAAvB,EAA8B;AAC9B,iBAAS,OAAO,GAAP,CAAW,UAAC,OAAD,EAAa;AAC7B,mBAAO,OAAP,CAD6B;SAAb,CAApB,CAD8B;KAAlC,MAIO;AACH,iBAAS,EAAT,CADG;AAEH,aAAK,IAAM,QAAN,IAAkB,MAAvB,EAA+B;AAC3B,gBAAI,OAAO,cAAP,CAAsB,QAAtB,CAAJ,EAAqC;AACjC,uBAAO,QAAP,IAAmB,OAAO,QAAP,CAAnB,CADiC;aAArC;SADJ;KANJ;;AAaA,cAAsB,MAAtB,EAA8B,OAAO,cAAP,CAAsB,MAAtB,CAA9B,EAhBuC;;AAkBvC,WAAO,MAAP,CAlBuC;CAA5B","file":"objectUnfreeze.js","sourcesContent":["/**\n * Make a shallow copy of the object maintaining the prototype.\n */\nexport default (source: Object): Object => {\n    let target;\n\n    if (source.constructor === Array) {\n        target = source.map((element) => {\n            return element;\n        });\n    } else {\n        target = {};\n        for (const property in source) {\n            if (source.hasOwnProperty(property)) {\n                target[property] = source[property];\n            }\n        }\n    }\n\n    Object.setPrototypeOf(target, Object.getPrototypeOf(source));\n\n    return target;\n};\n"],"sourceRoot":"/source/"}